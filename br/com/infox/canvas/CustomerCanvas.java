/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.infox.canvas;

import br.com.infox.dal.ConnectionModule;
import java.sql.*;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Lucas Laet
 */
public class CustomerCanvas extends javax.swing.JInternalFrame {

    private Connection connection = null;
    private PreparedStatement pst = null;
    private ResultSet rs = null;

    /**
     * Creates new form ClientCanvas
     */
    public CustomerCanvas() {
        initComponents();
        connection = ConnectionModule.connector();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtClientName = new javax.swing.JTextField();
        txtClientAddress = new javax.swing.JTextField();
        txtClientMail = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblClient = new javax.swing.JTable();
        txtClientPhone = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("CUSTOMERS");
        setPreferredSize(new java.awt.Dimension(600, 501));

        jLabel2.setText("ADDRESS");

        jLabel3.setText("PHONE NUMBER*");

        jLabel4.setText("EMAIL");

        jLabel5.setText("NAME*");

        txtClientAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClientAddressActionPerformed(evt);
            }
        });

        jLabel6.setText("Required fields *");

        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/infox/icons/create.png"))); // NOI18N
        btnAdd.setToolTipText("Add customer");
        btnAdd.setBorderPainted(false);
        btnAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAdd.setMinimumSize(new java.awt.Dimension(75, 70));
        btnAdd.setPreferredSize(new java.awt.Dimension(75, 70));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/infox/icons/update.png"))); // NOI18N
        jButton2.setToolTipText("Update customer");
        jButton2.setBorderPainted(false);
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.setMinimumSize(new java.awt.Dimension(75, 70));
        jButton2.setPreferredSize(new java.awt.Dimension(75, 70));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/infox/icons/delete.png"))); // NOI18N
        jButton3.setToolTipText("Delete customer");
        jButton3.setBorderPainted(false);
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.setMinimumSize(new java.awt.Dimension(75, 70));
        jButton3.setPreferredSize(new java.awt.Dimension(75, 70));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchKeyTyped(evt);
            }
        });

        tblClient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "", "", "", ""
            }
        ));
        tblClient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblClientMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblClient);

        txtClientPhone.setToolTipText("");
        txtClientPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClientPhoneActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/infox/icons/search.png"))); // NOI18N
        jLabel1.setMaximumSize(new java.awt.Dimension(33, 57));
        jLabel1.setMinimumSize(new java.awt.Dimension(33, 57));
        jLabel1.setPreferredSize(new java.awt.Dimension(33, 57));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(86, 86, 86)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel2)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jLabel4)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtClientName, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtClientMail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                                    .addComponent(txtClientAddress, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(txtClientPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jLabel6))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6)
                        .addGap(20, 20, 20)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(56, Short.MAX_VALUE)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)))
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtClientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtClientAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtClientPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtClientMail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50))
        );

        setBounds(0, 0, 600, 510);
    }// </editor-fold>//GEN-END:initComponents

    /*
    *Add a new customer to database
     */
    private void addClient() {
        // create the insert sql statement on a String
        String create = "insert into tbCustomers(customerName, customerAddress, customerPhone, customerMail) values(?,?,?,?)";
        try {
            if (txtClientName.getText().isEmpty() || txtClientPhone.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "There are one or more required fields not filled in!");
            } else {
                //prepare the statement for the database operation
                pst = connection.prepareStatement(create);
                pst.setString(1, txtClientName.getText());
                pst.setString(2, txtClientAddress.getText());
                pst.setString(3, txtClientPhone.getText());
                pst.setString(4, txtClientMail.getText());
                //use the statement to create a user on database
                int instruction = pst.executeUpdate();
                if (instruction > 0) {
                    JOptionPane.showMessageDialog(null, "New customer registered successfully.");
                    // clean the fields of the user form
                    txtClientName.setText(null);
                    txtClientAddress.setText(null);
                    txtClientPhone.setText(null);
                    txtClientMail.setText(null);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    /*
    *Update the customer data on database
     */
    private void updateClient() {
        // create the update sql statement on a String
        String update = "update tbCustomers set customerName = ?, customerAddress = ?, customerPhone = ?, customerMail = ? where customerID = ?";
        try {
            //prepare the update statement with the data received on form, as sql query
            pst = connection.prepareStatement(update);
            pst.setString(1, txtClientName.getText());
            pst.setString(2, txtClientAddress.getText());
            pst.setString(3, txtClientPhone.getText());
            pst.setString(4, txtClientMail.getText());
            //get the table row, selected by the client mouse click
            int set = tblClient.getSelectedRow();
            pst.setString(5, tblClient.getModel().getValueAt(set, 0).toString());
            //verify the data entrance - if has any not filled in
            if (txtClientName.getText().isEmpty() || txtClientPhone.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "There are one or more fields not filled in!");
            } else {
                //execute sql update operation
                int instruction = pst.executeUpdate();
                //verify if the query returned 1
                if (instruction > 0) {
                    JOptionPane.showMessageDialog(null, "Informations updated successfully.");
                    txtClientName.setText(null);
                    txtClientAddress.setText(null);
                    txtClientPhone.setText(null);
                    txtClientMail.setText(null);
                    //enable the add button
                    btnAdd.setEnabled(true);
                } else {
                    JOptionPane.showMessageDialog(null, "The name field don't accept numbers. Please try again.");
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    /*
    *delete the customer from database
     */
    private void deleteClient() {
        int confirmationPane = JOptionPane.showConfirmDialog(null, "Confirm customer profile deletion?", "Warning", JOptionPane.YES_NO_OPTION);
        if (confirmationPane == JOptionPane.YES_OPTION) {
            if (txtClientName.getText().isEmpty() || txtClientPhone.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "There are one or more fields not filled in!");
            } else {
                // create the delete sql statement on a String
                String delete = "delete from tbCustomers where customerID = ?";
                try {
                    //prepare the delete statement with the data received on form, as sql query
                    pst = connection.prepareStatement(delete);
                    //get the table row, selected by the client mouse click
                    int set = tblClient.getSelectedRow();
                    pst.setString(1, tblClient.getModel().getValueAt(set, 0).toString());
                    //verify the data entrance - if has any not filled in
                    //execute sql update operation
                    int instruction = pst.executeUpdate();
                    //verify if the query returned 1
                    if (instruction > 0) {
                        JOptionPane.showMessageDialog(null, "Customer deleted successfully.");
                        txtClientName.setText(null);
                        txtClientAddress.setText(null);
                        txtClientPhone.setText(null);
                        txtClientMail.setText(null);
                        //enable the add button
                        btnAdd.setEnabled(true);
                    } else {
                        JOptionPane.showMessageDialog(null, "The name field don't accept numbers. Please try again.");
                    }
                } catch (Exception e) {
                    System.out.println(e);
                    JOptionPane.showMessageDialog(null, "Please select in the table, the customer to be deleted.");
                }
            }
        }
    }

    /*
    *Search the clients on database
    *With the dynamic search of updated list by the key word
     */
    private void searchClient() {
        String read = "select * from tbCustomers where customerName like ?";
        try {
            pst = connection.prepareStatement(read);
            // the % syntax is to complete the sql command of search by the key word
            pst.setString(1, txtSearch.getText() + "%");
            rs = pst.executeQuery();
            //the rs2xml imported jar lib are used to fill the table
            tblClient.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    /*
    *Fill the row data on the form fields
     */
    public void fieldSet() {
        //get the table row, selected by the client mouse click
        int set = tblClient.getSelectedRow();
        txtClientName.setText(tblClient.getModel().getValueAt(set, 1).toString());
        txtClientAddress.setText(tblClient.getModel().getValueAt(set, 2).toString());
        txtClientPhone.setText(tblClient.getModel().getValueAt(set, 3).toString());
        txtClientMail.setText(tblClient.getModel().getValueAt(set, 4).toString());
        //disable the add button, for duplicity of customers profile previde
        btnAdd.setEnabled(false);
    }

    private void txtClientAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtClientAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtClientAddressActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // call the addClient method
        addClient();
    }//GEN-LAST:event_btnAddActionPerformed

    private void txtClientPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtClientPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtClientPhoneActionPerformed

    private void tblClientMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblClientMouseClicked
        // call the fieldSet method
        fieldSet();
    }//GEN-LAST:event_tblClientMouseClicked

    private void txtSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyTyped
        // call the searchClient method
        searchClient();
    }//GEN-LAST:event_txtSearchKeyTyped

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // call the updateClient method
        updateClient();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // call the deleteClient method
        deleteClient();
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable tblClient;
    private javax.swing.JTextField txtClientAddress;
    private javax.swing.JTextField txtClientMail;
    private javax.swing.JTextField txtClientName;
    private javax.swing.JTextField txtClientPhone;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
